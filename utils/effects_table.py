# utils/effects_table.py
import textwrap
from .logging_utils import BOLD, BLUE, MAGENTA, CYAN, YELLOW, GREEN, RESET


def show_effects_table():
    effects = [
        (1, "Постеризация", "Чистое упрощение цветов, без фильтров.", "Очень быстро", "Используй малое число цветов для графичных результатов"),
        (2, "Плавные пятна", "Мягкие переходы, глянец.", "Средне", "Подходит для портретов — увеличь bilateral для более плавного блеска"),
        (3, "Комикс", "Контуры + сглаженные пятна — рисунок тушью.", "Средне", "Уменьши резкость контуров, если слишком агрессивно"),
        (4, "Бумага (Cutout)", "Вырезанные слои, неровные края (как мел/ножницы).", "Средне", "Подходит для силуэтов — попробуй разное порога Canny"),
        (5, "Сетка", "Половинная тонировка/рубрикация — ретро-штриховка.", "Очень быстро", "Шаг сетки влияет на «тон»"),
        (6, "Пыль", "Мягкий шум + рассеянный свет в ярких зонах.", "Очень быстро", "Для эффекта — увеличь уровень шума и лёгкий blur"),
        (7, "Мел", "Рисование мелом: мягкие, немного сухие границы.", "Медленно", "Поиграй с detail / контрастом для «пыльного» мелка"),
        (8, "ASCII-Арт", "Только символы! Цветной + ЧБ версия.", "Средне", "100% ASCII, без фона. Сохраняет ЧБ отдельно"),
        (9, "Пластик", "Глянцевый, игрушечный, яркие блики.", "Средне", "Добавь specular highlight mask для усиления блеска"),
        (10, "Неон", "Тёмный фон + светящиеся контуры (голубой/пурпур).", "Средне", "Попробуй разные неоновые палитры — cyan/magenta"),
        (11, "Хром", "Металлический блеск, холодные тона (синее сяйво).", "Средне", "Используем градиенты + колормэп для контроля оттенка"),
        (12, "Свеча", "Тёплое боковое освещение, золотистые тени.", "Очень быстро", "Подойдёт для сцен с тёплым настроением"),
        (13, "Голограмма", "Радужные переливы, как на CD-диске.", "Очень медленно", "Использует шум, HSV-сдвиг и колормэп для блестящего эффекта"),
        (14, "Акварель", "Мягкие растекающиеся переходы, как кисть и вода.", "Медленно", "Убираем резкие контуры, ставим сильный edge-preserve + blur"),
        (15, "Технический", "Чертёж: белые линии на синем фоне (blueprint).", "Очень быстро", "Линии — белые, фон — синий; инвертируем каналы правильно"),
        (16, "Карта", "Топографическая палитра — уровни как карта высот.", "Очень быстро", "Подходит для пейзажей/спутника"),
        (17, "Мозаика", "Набор случайных фигур в сетке.", "Среднее", "Чем больше клеток — тем плотнее мозаика"),
        (18, "Сон", "Плывущая, слегка искажённая структура.", "Медленно", "Искажения случайны — будут разные каждый раз"),
        (19, "Пиксель-Арт", "Чистая пикселизация (ретро).", "Очень быстро", "scale_factor ~0.05..0.2"),
        (20, "Огненный", "Тёплое свеча/пламя — мягкий glow в тёплых тонах.", "Средне", "Glow делается по яркостной маске, не просто контраст"),
    ]

    w_num, w_name, w_desc, w_speed = 4, 20, 45, 16
    wrap_desc = 45
    wrap_hint = 40

    print(f"\n{CYAN}{'='*110}{RESET}")
    print(f"{BOLD}{BLUE}СПИСОК ДОСТУПНЫХ ЭФФЕКТОВ (с подсказками){RESET}")
    print(f"{CYAN}{'-'*110}{RESET}")

    header = f"{BOLD}{MAGENTA}{'№':<{w_num}}{CYAN}{'Название':<{w_name}}{YELLOW}{'Описание':<{w_desc}}{GREEN}{'Скорость':<{w_speed}}{RESET}Подсказка"
    print(header)
    print(f"{CYAN}{'-'*110}{RESET}")

    for n, name, desc, speed, hint in effects:
        desc_lines = textwrap.wrap(desc, wrap_desc)
        hint_lines = textwrap.wrap(hint, wrap_hint)
        max_lines = max(len(desc_lines), len(hint_lines))
        for i in range(max_lines):
            num_str = f"{BOLD}{MAGENTA}{n:<{w_num}}{RESET}" if i == 0 else " " * w_num
            name_str = f"{CYAN}{name:<{w_name}}{RESET}" if i == 0 else " " * w_name
            desc_str = f"{YELLOW}{desc_lines[i]:<{w_desc}}{RESET}" if i < len(desc_lines) else " " * w_desc
            speed_str = f"{GREEN}{speed:<{w_speed}}{RESET}" if i == 0 else " " * w_speed
            hint_str = hint_lines[i] if i < len(hint_lines) else ""
            print(f"{num_str}{name_str}{desc_str}{speed_str}{hint_str}")

    print(f"{CYAN}{'='*110}{RESET}\n")